plot_pix_gg(1020, N3)
# test plot function for a given pixel
plot_pix_gg(1030, N3)
# test plot function for a given pixel
plot_pix_gg(1035, N3)
# N3
plot_grid(plot_pix_gg(1035, N3),
plot_pix_gg(700, N3) + theme(legend.position = "none") + labs(y = ''),
plot_pix_gg(707, N3) + theme(legend.position = "none") + labs(y = ''), ncol = 3)
# test plot function for a given pixel
plot_pix_gg(1502, N3)
# test plot function for a given pixel
plot_pix_gg(100, N3)
# test plot function for a given pixel
plot_pix_gg(200, N3)
# test plot function for a given pixel
plot_pix_gg(300, N3)
# test plot function for a given pixel
plot_pix_gg(400, N3)
# test plot function for a given pixel
plot_pix_gg(500, N3)
# test plot function for a given pixel
plot_pix_gg(600, N3)
# test plot function for a given pixel
plot_pix_gg(25, N3)
# test plot function for a given pixel
plot_pix_gg(50, N3)
# test plot function for a given pixel
plot_pix_gg(75, N3)
# test plot function for a given pixel
plot_pix_gg(50, N3)
# ----------------- Plot predictions over time ------------------
## ggplot version
plot_pix_gg <- function(pix, obs) {
px <- as.character(pix)
pxv <- paste("V",as.character(pix), sep = "")
#base
med.base <- med.pred.base %>% as.data.frame()
med.base$year <- row.names(med.base)
med <- med.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.base <- low.pred.base %>% as.data.frame() # low
low.base$year <- row.names(low.base)
low <- low.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1) # remove first year (true value, not part of the forecast)
up.base <- up.pred.base %>% as.data.frame() # high
up.base$year <- row.names(up.base)
up <- up.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
#clim
med.clim <- med.pred.clim %>% as.data.frame()
med.clim$year <- row.names(med.clim)
med.clim <- med.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.clim <- low.pred.clim %>% as.data.frame() # low
low.clim$year <- row.names(low.clim)
low.clim <- low.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
up.clim <- up.pred.clim %>% as.data.frame()  # high
up.clim$year <- row.names(up.clim)
up.clim <- up.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
# observed
Ndat <- obs %>% as.data.frame() %>% rownames_to_column("year") %>%
pivot_longer(!year, values_to = "obs", names_to = "pixel") %>%
filter(pixel == px) %>%
mutate(year = as.numeric(year)+1985) %>%
dplyr::select(-pixel)
# combine predictions and observations into one dataframe
plot.dat <- left_join(Ndat, med) %>% left_join(.,low) %>% left_join(.,up) %>% left_join(.,up.clim) %>% left_join(.,low.clim) %>% left_join(.,med.clim)
## plot
# color palette
cols = c('base' = '#F8766D', 'climate-only' = '#00BFC4')
(plot.dat %>%
ggplot(aes(x = year, y = obs)) +
geom_point(aes(x = year, y = obs, shape = "observations"), fill = 'black') + geom_line(aes(x = year, y = obs), lty = 2) +
geom_ribbon(aes(ymin = low.pred.base, ymax = up.pred.base, fill = "base"),
alpha=0.4) +
geom_ribbon(aes(ymin = low.pred.clim, ymax = up.pred.clim, fill = "climate-only"),
alpha=0.3) +
geom_line(aes(x = year, y = med.pred.base, col = "base"), lwd = 1.5) +
geom_line(aes(x = year, y = med.pred.clim, col = "climate-only"), lwd = 1.5) +
scale_y_continuous(limits = c(-10, 80)) + # good scale for N3
# scale_y_continuous(limits = c(-5, 35)) + # good scale for N
scale_color_manual(name = '', values = cols) +
scale_fill_manual(name = '', values = cols) +
scale_shape_manual(name = '', values = 21, labels = 'observations') +
labs(x = "YEAR", y = "TREE COVER (%)") +
theme(
legend.justification = c("right", "top"),
legend.position = c(.99, .99),
legend.title=element_blank(),
legend.spacing.y = unit(-.2, 'cm'),
legend.box.margin = margin(4,4,4,4),
legend.key=element_blank(),
legend.key.size = unit(0.75, 'cm'),
legend.text=element_text(size=13),
text = element_text(size=18),
panel.background = element_rect(linetype = "solid",fill = NA),
panel.border = element_rect(linetype = "solid", fill = NA))
)
}
# test plot function for a given pixel
plot_pix_gg(50, N3)
# ----------------- Plot predictions over time ------------------
## ggplot version
plot_pix_gg <- function(pix, obs) {
px <- as.character(pix)
pxv <- paste("V",as.character(pix), sep = "")
#base
med.base <- med.pred.base %>% as.data.frame()
med.base$year <- row.names(med.base)
med <- med.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.base <- low.pred.base %>% as.data.frame() # low
low.base$year <- row.names(low.base)
low <- low.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1) # remove first year (true value, not part of the forecast)
up.base <- up.pred.base %>% as.data.frame() # high
up.base$year <- row.names(up.base)
up <- up.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
#clim
med.clim <- med.pred.clim %>% as.data.frame()
med.clim$year <- row.names(med.clim)
med.clim <- med.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.clim <- low.pred.clim %>% as.data.frame() # low
low.clim$year <- row.names(low.clim)
low.clim <- low.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
up.clim <- up.pred.clim %>% as.data.frame()  # high
up.clim$year <- row.names(up.clim)
up.clim <- up.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
# observed
Ndat <- obs %>% as.data.frame() %>% rownames_to_column("year") %>%
pivot_longer(!year, values_to = "obs", names_to = "pixel") %>%
filter(pixel == px) %>%
mutate(year = as.numeric(year)+1985) %>%
dplyr::select(-pixel)
# combine predictions and observations into one dataframe
plot.dat <- left_join(Ndat, med) %>% left_join(.,low) %>% left_join(.,up) %>% left_join(.,up.clim) %>% left_join(.,low.clim) %>% left_join(.,med.clim)
## plot
# color palette
cols = c('base' = '#F8766D', 'climate-only' = '#00BFC4')
(plot.dat %>%
ggplot(aes(x = year, y = obs)) +
geom_point(aes(x = year, y = obs, shape = "observations"), fill = 'black') + geom_line(aes(x = year, y = obs), lty = 2) +
geom_ribbon(aes(ymin = low.pred.base, ymax = up.pred.base, fill = "base"),
alpha=0.4) +
geom_ribbon(aes(ymin = low.pred.clim, ymax = up.pred.clim, fill = "climate-only"),
alpha=0.3) +
geom_line(aes(x = year, y = med.pred.base, col = "base"), lwd = 1.5) +
geom_line(aes(x = year, y = med.pred.clim, col = "climate-only"), lwd = 1.5) +
scale_y_continuous(limits = c(-5, 80)) + # good scale for N3
# scale_y_continuous(limits = c(-5, 35)) + # good scale for N
scale_color_manual(name = '', values = cols) +
scale_fill_manual(name = '', values = cols) +
scale_shape_manual(name = '', values = 21, labels = 'observations') +
labs(x = "YEAR", y = "TREE COVER (%)") +
theme(
legend.justification = c("right", "top"),
legend.position = c(.99, .99),
legend.title=element_blank(),
legend.spacing.y = unit(-.2, 'cm'),
legend.box.margin = margin(4,4,4,4),
legend.key=element_blank(),
legend.key.size = unit(0.75, 'cm'),
legend.text=element_text(size=13),
text = element_text(size=18),
panel.background = element_rect(linetype = "solid",fill = NA),
panel.border = element_rect(linetype = "solid", fill = NA))
)
}
# test plot function for a given pixel
plot_pix_gg(50, N3)
# test plot function for a given pixel
plot_pix_gg(15, N3)
View(N3)
# test plot function for a given pixel
plot_pix_gg(4, N3)
# test plot function for a given pixel
plot_pix_gg(50, N3)
# test plot function for a given pixel
plot_pix_gg(160, N3)
# test plot function for a given pixel
plot_pix_gg(163, N3)
# test plot function for a given pixel
plot_pix_gg(165, N3)
# test plot function for a given pixel
plot_pix_gg(169, N3)
# test plot function for a given pixel
plot_pix_gg(215, N3)
# test plot function for a given pixel
plot_pix_gg(160, N3)
# test plot function for a given pixel
plot_pix_gg(215, N3)
# ----------------- Plot predictions over time ------------------
## ggplot version
plot_pix_gg <- function(pix, obs) {
px <- as.character(pix)
pxv <- paste("V",as.character(pix), sep = "")
#base
med.base <- med.pred.base %>% as.data.frame()
med.base$year <- row.names(med.base)
med <- med.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.base <- low.pred.base %>% as.data.frame() # low
low.base$year <- row.names(low.base)
low <- low.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1) # remove first year (true value, not part of the forecast)
up.base <- up.pred.base %>% as.data.frame() # high
up.base$year <- row.names(up.base)
up <- up.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
#clim
med.clim <- med.pred.clim %>% as.data.frame()
med.clim$year <- row.names(med.clim)
med.clim <- med.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.clim <- low.pred.clim %>% as.data.frame() # low
low.clim$year <- row.names(low.clim)
low.clim <- low.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
up.clim <- up.pred.clim %>% as.data.frame()  # high
up.clim$year <- row.names(up.clim)
up.clim <- up.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
# observed
Ndat <- obs %>% as.data.frame() %>% rownames_to_column("year") %>%
pivot_longer(!year, values_to = "obs", names_to = "pixel") %>%
filter(pixel == px) %>%
mutate(year = as.numeric(year)+1985) %>%
dplyr::select(-pixel)
# combine predictions and observations into one dataframe
plot.dat <- left_join(Ndat, med) %>% left_join(.,low) %>% left_join(.,up) %>% left_join(.,up.clim) %>% left_join(.,low.clim) %>% left_join(.,med.clim)
## plot
# color palette
cols = c('base' = '#F8766D', 'climate-only' = '#00BFC4')
(plot.dat %>%
ggplot(aes(x = year, y = obs)) +
geom_point(aes(x = year, y = obs, shape = "observations"), fill = 'black') + geom_line(aes(x = year, y = obs), lty = 2) +
geom_ribbon(aes(ymin = low.pred.base, ymax = up.pred.base, fill = "base"),
alpha=0.4) +
geom_ribbon(aes(ymin = low.pred.clim, ymax = up.pred.clim, fill = "climate-only"),
alpha=0.3) +
geom_line(aes(x = year, y = med.pred.base, col = "base"), lwd = 1.5) +
geom_line(aes(x = year, y = med.pred.clim, col = "climate-only"), lwd = 1.5) +
scale_y_continuous(limits = c(-5, 70)) + # good scale for N3
# scale_y_continuous(limits = c(-5, 35)) + # good scale for N
scale_color_manual(name = '', values = cols) +
scale_fill_manual(name = '', values = cols) +
scale_shape_manual(name = '', values = 21, labels = 'observations') +
labs(x = "YEAR", y = "TREE COVER (%)") +
theme(
legend.justification = c("right", "top"),
legend.position = c(.99, .99),
legend.title=element_blank(),
legend.spacing.y = unit(-.2, 'cm'),
legend.box.margin = margin(4,4,4,4),
legend.key=element_blank(),
legend.key.size = unit(0.75, 'cm'),
legend.text=element_text(size=13),
text = element_text(size=18),
panel.background = element_rect(linetype = "solid",fill = NA),
panel.border = element_rect(linetype = "solid", fill = NA))
)
}
# test plot function for a given pixel
plot_pix_gg(215, N3)
# test plot function for a given pixel
plot_pix_gg(219, N3)
# test plot function for a given pixel
plot_pix_gg(160, N3)
# test plot function for a given pixel
plot_pix_gg(219, N3)
# test plot function for a given pixel
plot_pix_gg(1035, N3)
# test plot function for a given pixel
plot_pix_gg(700, N3)
# test plot function for a given pixel
plot_pix_gg(707, N3)
# test plot function for a given pixel
plot_pix_gg(265, N3)
# test plot function for a given pixel
plot_pix_gg(269, N3)
# test plot function for a given pixel
plot_pix_gg(276, N3)
# test plot function for a given pixel
plot_pix_gg(272, N3)
# test plot function for a given pixel
plot_pix_gg(273, N3)
# test plot function for a given pixel
plot_pix_gg(274, N3)
# test plot function for a given pixel
plot_pix_gg(275, N3)
# test plot function for a given pixel
plot_pix_gg(290, N3)
# test plot function for a given pixel
plot_pix_gg(317, N3)
# test plot function for a given pixel
plot_pix_gg(327, N3)
# test plot function for a given pixel
plot_pix_gg(320, N3)
# test plot function for a given pixel
plot_pix_gg(333, N3)
max(N3)
which.max(N3)
which.max(N3[1,])
# test plot function for a given pixel
plot_pix_gg(332, N3)
# test plot function for a given pixel
plot_pix_gg(990, N3)
# test plot function for a given pixel
plot_pix_gg(336, N3)
# test plot function for a given pixel
plot_pix_gg(427, N3)
# test plot function for a given pixel
plot_pix_gg(428, N3)
# test plot function for a given pixel
plot_pix_gg(429, N3)
# test plot function for a given pixel
plot_pix_gg(430, N3)
# test plot function for a given pixel
plot_pix_gg(431, N3)
# test plot function for a given pixel
plot_pix_gg(432, N3)
# test plot function for a given pixel
plot_pix_gg(433, N3)
# test plot function for a given pixel
plot_pix_gg(482, N3)
# test plot function for a given pixel
plot_pix_gg(483, N3)
# test plot function for a given pixel
plot_pix_gg(484, N3)
# test plot function for a given pixel
plot_pix_gg(485, N3)
# test plot function for a given pixel
plot_pix_gg(486, N3)
# test plot function for a given pixel
plot_pix_gg(487, N3)
# test plot function for a given pixel
plot_pix_gg(488, N3)
# N3
plot_grid(plot_pix_gg(483, N3),
plot_pix_gg(485, N3) + theme(legend.position = "none") + labs(y = ''),
plot_pix_gg(488, N3) + theme(legend.position = "none") + labs(y = ''), ncol = 3)
# N3
plot_grid(plot_pix_gg(427, N3),
plot_pix_gg(431, N3) + theme(legend.position = "none") + labs(y = ''),
plot_pix_gg(433, N3) + theme(legend.position = "none") + labs(y = ''), ncol = 3)
# test plot function for a given pixel
plot_pix_gg(2307, N3)
# test plot function for a given pixel
plot_pix_gg(2308, N3)
# test plot function for a given pixel
plot_pix_gg(2309, N3)
# test plot function for a given pixel
plot_pix_gg(2310, N3)
# test plot function for a given pixel
plot_pix_gg(2311, N3)
# test plot function for a given pixel
plot_pix_gg(2312, N3)
# test plot function for a given pixel
plot_pix_gg(2313, N3)
# test plot function for a given pixel
plot_pix_gg(2352, N3)
# test plot function for a given pixel
plot_pix_gg(2351, N3)
# N3
plot_grid(plot_pix_gg(427, N3),
plot_pix_gg(431, N3) + theme(legend.position = "none") + labs(y = ''),
plot_pix_gg(433, N3) + theme(legend.position = "none") + labs(y = ''), ncol = 3)
# ----------------- Plot predictions over time ------------------
## ggplot version
plot_pix_gg <- function(pix, obs) {
px <- as.character(pix)
pxv <- paste("V",as.character(pix), sep = "")
#base
med.base <- med.pred.base %>% as.data.frame()
med.base$year <- row.names(med.base)
med <- med.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.base <- low.pred.base %>% as.data.frame() # low
low.base$year <- row.names(low.base)
low <- low.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1) # remove first year (true value, not part of the forecast)
up.base <- up.pred.base %>% as.data.frame() # high
up.base$year <- row.names(up.base)
up <- up.base %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.base", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
#clim
med.clim <- med.pred.clim %>% as.data.frame()
med.clim$year <- row.names(med.clim)
med.clim <- med.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "med.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
low.clim <- low.pred.clim %>% as.data.frame() # low
low.clim$year <- row.names(low.clim)
low.clim <- low.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "low.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
up.clim <- up.pred.clim %>% as.data.frame()  # high
up.clim$year <- row.names(up.clim)
up.clim <- up.clim %>% mutate(year = as.numeric(year)+1985) %>%
pivot_longer(!year, values_to = "up.pred.clim", names_to = "pixel") %>%
filter(pixel == pxv) %>% dplyr::select(-pixel) %>%
filter(year != 1986) # remove first year (true value, not part of the forecast)
# observed
Ndat <- obs %>% as.data.frame() %>% rownames_to_column("year") %>%
pivot_longer(!year, values_to = "obs", names_to = "pixel") %>%
filter(pixel == px) %>%
mutate(year = as.numeric(year)+1985) %>%
dplyr::select(-pixel)
# combine predictions and observations into one dataframe
plot.dat <- left_join(Ndat, med) %>% left_join(.,low) %>% left_join(.,up) %>% left_join(.,up.clim) %>% left_join(.,low.clim) %>% left_join(.,med.clim)
## plot
# color palette
cols = c('base' = '#F8766D', 'climate-only' = '#00BFC4')
(plot.dat %>%
ggplot(aes(x = year, y = obs)) +
geom_point(aes(x = year, y = obs, shape = "observations"), fill = 'black') + geom_line(aes(x = year, y = obs), lty = 2) +
geom_ribbon(aes(ymin = low.pred.base, ymax = up.pred.base, fill = "base"),
alpha=0.4) +
geom_ribbon(aes(ymin = low.pred.clim, ymax = up.pred.clim, fill = "climate-only"),
alpha=0.3) +
geom_line(aes(x = year, y = med.pred.base, col = "base"), lwd = 1.5) +
geom_line(aes(x = year, y = med.pred.clim, col = "climate-only"), lwd = 1.5) +
scale_y_continuous(limits = c(-5, 60)) + # good scale for N3
# scale_y_continuous(limits = c(-5, 35)) + # good scale for N
scale_color_manual(name = '', values = cols) +
scale_fill_manual(name = '', values = cols) +
scale_shape_manual(name = '', values = 21, labels = 'observations') +
labs(x = "YEAR", y = "TREE COVER (%)") +
theme(
legend.justification = c("right", "top"),
legend.position = c(.99, .99),
legend.title=element_blank(),
legend.spacing.y = unit(-.2, 'cm'),
legend.box.margin = margin(4,4,4,4),
legend.key=element_blank(),
legend.key.size = unit(0.75, 'cm'),
legend.text=element_text(size=13),
text = element_text(size=18),
panel.background = element_rect(linetype = "solid",fill = NA),
panel.border = element_rect(linetype = "solid", fill = NA))
)
}
# N3
plot_grid(plot_pix_gg(427, N3),
plot_pix_gg(431, N3) + theme(legend.position = "none") + labs(y = ''),
plot_pix_gg(433, N3) + theme(legend.position = "none") + labs(y = ''), ncol = 3)
# N3
plot_grid(plot_pix_gg(483, N3),
plot_pix_gg(485, N3) + theme(legend.position = "none") + labs(y = ''),
plot_pix_gg(488, N3) + theme(legend.position = "none") + labs(y = ''), ncol = 3)
ggsave("R:/Shriver_Lab/PJspread/evaluate_out_of_sample/35y_OOS_2_far_predictions/single_pixel_low_mid_high_cover_5yr_avg_init.png", plot = last_plot(), dpi = 400)
# save as rds to put into a plot later
saveRDS(three.panel, "R:/Shriver_Lab/PJspread/evaluate_out_of_sample/35y_OOS_2_far_predictions/single_pixel_low_mid_high_cover_5yr_avg_init.rds")
# N3
(three.panel <- plot_grid(plot_pix_gg(483, N3),
plot_pix_gg(485, N3) + theme(legend.position = "none") + labs(y = ''),
plot_pix_gg(488, N3) + theme(legend.position = "none") + labs(y = ''), ncol = 3))
# save as rds to put into a plot later
saveRDS(three.panel, "R:/Shriver_Lab/PJspread/evaluate_out_of_sample/35y_OOS_2_far_predictions/single_pixel_low_mid_high_cover_5yr_avg_init.rds")
# save mediam pixel-year predicted cover
write.csv(med.pred.base, "R:/Shriver_Lab/PJspread/evaluate_out_of_sample/35y_OOS_2_far_predictions/median_predictions_for_mapping/in_sample_35y_base_median_5y_avg_init.csv")
