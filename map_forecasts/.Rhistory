main = rep("predicted changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","pred_change.mp4"),
framerate = 40,
width = 480, height = 480)
# #animate (with obs)
# save as mp4
av_capture_graphics(
animate(forecast.stack, n = 1,
main = rep("predicted changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","pred_change.mp4"),
framerate = 30,
width = 480, height = 480)
# #animate (with obs)
# save as mp4
av_capture_graphics(
animate(forecast.stack, n = 1,
main = rep("predicted changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","pred_change.mp4"),
framerate = 15,
width = 480, height = 480)
# #animate (with obs)
# save as mp4
av_capture_graphics(
animate(forecast.stack, n = 1,
main = rep("predicted changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","pred_change.mp4"),
framerate = 7,
width = 480, height = 480)
# #animate (with obs)
# save as mp4
av_capture_graphics(
animate(forecast.stack, n = 1,
main = rep("predicted changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","pred_change.mp4"),
framerate = 5,
width = 480, height = 480)
av_capture_graphics(
animate(truthstack, n = 1,
main = rep("predicted changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","obs_change.mp4"),
framerate = 5,
width = 480, height = 480)
av_capture_graphics(
animate(truthstack, n = 1,
main = rep("observed changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","obs_change.mp4"),
framerate = 3,
width = 480, height = 480)
# #animate (with obs)
# save as mp4
av_capture_graphics(
animate(forecast.stack, n = 1,
main = rep("predicted changes in cover", 36),
col = brewer.pal(9,"YlGn"),
zlim= c(0,30)),
output = file.path("R:/Shriver_Lab/PJspread/figures","pred_change.mp4"),
framerate = 3,
width = 480, height = 480)
# --------- Plot forecasted change in cover -------------
# forecasted change in cover based of first year
predchangestack <- forecast.stack-truthstack[[1]]
obschangestack <- truthstack-truthstack[[1]]
latchangestack <- lat.stack-truthstack[[1]]
# plot forecast
cols2 <- c(rev(brewer.pal(9,"Blues")), "white", brewer.pal(9,"Reds"))
#
#
#
#***** try with out level plot!!! ******
par(mfrow = c(1,4))
plot(obschangestack[[4]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[14]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[24]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[34]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
#
#
#
#***** try with out level plot!!! ******
par(mfrow = c(2,4))
plot(obschangestack[[4]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[14]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[24]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[34]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[4]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[14]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[24]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[34]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
#
#
#
#***** try with out level plot!!! ******
par(mfrow = c(2,4))
plot(obschangestack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(obschangestack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
plot(predchangestack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-15, 15))
#
#
#
#***** try with out level plot!!! ******
par(mfrow = c(2,4))
plot(obschangestack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(obschangestack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(obschangestack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(obschangestack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(predchangestack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(predchangestack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(predchangestack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(predchangestack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
# subset and plot only 1990, 2000, 2010, 2020
levelplot(subset(raster::stack(obschangestack[[subras]],predchangestack[[subras]]), c(1,5,2,6,3,7,4,8)), col.regions=cols2, zlim = c(-10,10), main = "Observed    Predicted      ",names.attr = as.character(c(1990,1990,2000,2000,2010,2010,2020,2020)), xlab = "Longitude", ylab = "Latitude", scales = list(draw = F))
# subset and plot only 1990, 2000, 2010, 2020
subras <- c(5,15,25,36)
# plot in grid
levelplot(truthstack[[subras]], col.regions=colorRampPalette(brewer.pal(9,"YlGn")), names.attr = as.character(c(1990,2000,2010,2020)), scales = list(draw=F))
# ---------- plot latent timeseries of cover ----------
sublat <- c(5,15,25)
levelplot(lat.stack[[sublat]], col.regions=cols, names.attr = as.character(c(1990,2000,2010)))
# ---------- plot latent timeseries of cover ----------
sublat <- c(5,15,25)
levelplot(lat.stack[[sublat]], col.regions=colorRampPalette(brewer.pal(9,"YlGn")), names.attr = as.character(c(1990,2000,2010)))
# --------- Plot forecasted change in cover -------------
# forecasted change in cover based of first year
predchangestack <- forecast.stack-truthstack[[1]]
obschangestack <- truthstack-truthstack[[1]]
latchangestack <- lat.stack-truthstack[[1]]
# plot forecast
cols2 <- c(rev(brewer.pal(9,"Blues")), "white", brewer.pal(9,"Reds"))
#
#
#
#***** try with out level plot!!! ******
par(mfrow = c(2,4))
plot(obschangestack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(obschangestack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
#
#
#
#
breakpoints <- c(seq(-20,-1,1), 0, seq(1,20,1))
# subset and plot only 1990, 2000, 2010, 2020
levelplot(subset(raster::stack(obschangestack[[subras]],predchangestack[[subras]]), c(1,5,2,6,3,7,4,8)), col.regions=cols2, zlim = c(-10,10), main = "Observed    Predicted      ",names.attr = as.character(c(1990,1990,2000,2000,2010,2010,2020,2020)), xlab = "Longitude", ylab = "Latitude", scales = list(draw = F))
# subset and plot only 1990, 2000, 2010, 2020
levelplot(subset(raster::stack(obschangestack[[subras]],predchangestack[[subras]]), c(1,5,2,6,3,7,4,8)), col.regions=cols2, zlim = c(-10,10), main = "Observed    Predicted      ",names.attr = as.character(c(1990,1990,2000,2000,2010,2010,2020,2020)), xlab = "Longitude", ylab = "Latitude", scales = list(draw = F))
# -------- plot Bias in cover forecast ------
# error based on latent state
#biastack <- (forecast.stack[[1:31]] - lat.stack[[1:31]]) # bias based on latent
biastack <- (forecast.stack[[1:36]] - truthstack[[1:36]]) # bias based on observed
subd <- sublat # for including latent
cols3 <- colorRampPalette(rev(brewer.pal(9,"RdBu")))
breakp <- seq(-15,15,1)
levelplot(biastack[[subd]], col.regions=cols3, breaks = breakp, names.attr = as.character(c(1990,2000,2010)))
# plot all maps of cover change together (with latent)
# subset and plot only 1990, 2000, 2010
levelplot(subset(raster::stack(obschangestack[[sublat]],latchangestack[[sublat]],predchangestack[[sublat]],biastack[[sublat]]), c(1,4,7,10,2,5,8,11,3,6,9,12)), col.regions=cols2, breaks = breakpoints,main = "Obs.          Latent        Pred.       Error   ",names.attr = as.character(c(1990,1990,1990,1990,2000,2000,2000,2000,2010,2010,2010,2010)), xlab = "Longitude", ylab = "Latitude", scales = list(draw = F))
# plot all maps of cover change together (with latent)
# subset and plot only 1990, 2000, 2010
levelplot(subset(raster::stack(obschangestack[[sublat]],latchangestack[[sublat]],predchangestack[[sublat]],biastack[[sublat]]), c(1,4,7,10,2,5,8,11,3,6,9,12)), col.regions=cols2, breaks = breakpoints,main = "Obs.          Latent        Pred.       Error   ",names.attr = as.character(c(1990,1990,1990,1990,2000,2000,2000,2000,2010,2010,2010,2010)), xlab = "Longitude", ylab = "Latitude", scales = list(draw = F))
subras
# plot observed, predicted, and error
levelplot(subset(raster::stack(truthstack[[subras]],
forecast.stack[[subras]],
biastack[[subras]]),
c(1,5,9,2,6,10,3,7,11,4,8,12)),
col.regions=cols2, breaks = breakpoints,
main = "Obs.       Pred.       Error   ",names.attr = as.character(c(1990,1990,1990,2000,2000,2000,2010,2010,2010,2021,2021,2021)),
xlab = "Longitude",
ylab = "Latitude",
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "Longitude", ylab = "Latitude",
zlim = c(0,30),
names.attr = as.character(c(1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "Longitude", ylab = "Latitude",
zlim = c(0,30),
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "Longitude", ylab = "Latitude",
zlim = c(0,30),
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "Longitude", ylab = "Latitude",
at = c(0,30),
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "Longitude", ylab = "Latitude",
at = 0,
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "Longitude", ylab = "Latitude",
at = seq(0:30, 5),
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "Longitude", ylab = "Latitude",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "", ylab = "predicted   observed",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "", ylab = "predicted      observed",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "", ylab = "predicted            observed",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F))
# this plot works best if you make plot window SHORT and WIDE
(mapped_pred_vs_obs <- levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "", ylab = "predicted            observed",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F)))
# save to file
ggsave(filename = "R:/Shriver_Lab/PJspread/figures/pred_v_obs_mapped_base.jpeg", plot = mapped_pred_vs_obs, dpi = 600, width = 6, height = 3, units = "in")
# this plot works best if you make plot window SHORT and WIDE
(mapped_pred_vs_obs <- levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "", ylab = "predicted            observed",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F)))
# save to file
ggsave(filename = "R:/Shriver_Lab/PJspread/figures/pred_v_obs_mapped_base.jpeg", plot = mapped_pred_vs_obs, dpi = 600, width = 6, height = 3, units = "in")
cols3 <- colorRampPalette(rev(brewer.pal(9,"RdBu")))
breakp <- seq(-15,15,1)
levelplot(biastack[[subras]], col.regions=cols3, breaks = breakp, names.attr = as.character(c(1990,2000,2010,2021)))
cols3 <- colorRampPalette(rev(brewer.pal(9,"RdBu")))
breakp <- seq(-15,15,1)
levelplot(biastack[[subras]], col.regions=cols3, breaks = breakp, names.attr = as.character(c(1990,2000,2010,2021)))
# base plot
par(mfrow = c(1,4))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(predchangestack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(predchangestack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(predchangestack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
plot(predchangestack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
plot(predchangestack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
plot(predchangestack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-8, 8))
# base plot
par(mfrow = c(1,4))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-10, 10))
# base plot
par(mfrow = c(1,4))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11))
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11))
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11))
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11))
?plot
cols3 <- colorRampPalette(rev(brewer.pal(9,"RdBu")))
breakp <- seq(-15,15,1)
levelplot(biastack[[subras]], col.regions=cols3, breaks = breakp, names.attr = as.character(c(1990,2000,2010,2021)))
levelplot(biastack[[subras]], col.regions=cols3, breaks = breakp, names.attr = as.character(c(1990,2000,2010,2021)),
scales = list(draw = F))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n" and yaxt = "n")
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", bty = "n")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", axes = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", box(bty = 'n'))
# base plot
par(mfrow = c(1,4),mai = c(1, 0.1, 0.1, 0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.03, 0.03, 0.03))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.05, 0.03, 0.03))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.05, 0.05, 0.05))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.08, 0.08, 0.08))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.1, 0.1, 0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.1, 0.1, 0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.1, 0.1, 0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.1, 0.1, 0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = "")
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.2, 0.2, 0.2))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.05, 0.05, 0.05))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.01, 0.01, 0.01))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.0001, 0.0001, 0.0001))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, -0.01, -0.01, -0.01))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1, 0.01, 0.01, 0.01))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
?maintainer
?mai
??mai
?par
# base plot
par(mfrow = c(1,4),mai = c(1, 0.01,1, 0.01))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
subd <- sublat # for including latent
# base plot
par(mfrow = c(1,4),mai = c(1,0.1,0.1,0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
plot(forecast.stack[[1]], zlim = c(0,30), col=colorRampPalette(brewer.pal(9,"YlGn")))
plot(forecast.stack[[1]], zlim = c(0,30), col=brewer.pal(9,"YlGn"))
# this plot works best if you make plot window SHORT and WIDE
(mapped_pred_vs_obs <- levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "", ylab = "predicted            observed",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F)))
# 2.) Forecasted cover for each pixel (TABULAR). Columns are pixel number, rows are year
pp <- read.csv("R:/Shriver_Lab/PJspread/evaluate_out_of_sample/35y_insample_predictions/median_predictions_for_mapping/in_sample_35y_base_median_5y_avg_init_rm_neg.csv") # model version here
# --------------- Recover forecasted XY data ----------------------
# Reformat forecasted cover data and join w/ start.xy dataframe to recover x,y data
t.pp <- t(pp) # row = pixel, column = year (transpose matrix)
t.pp <- t.pp[-1,]
# add years as column names
oldnames <- t.pp %>% as.data.frame() %>% colnames()
tree.for <- t.pp %>% as.data.frame() %>% rename_with(~ as.character(1986:2021)[which(oldnames == .x)], .cols = oldnames)
# join
forecast.dat <- cbind(start.xy, tree.for) %>% dplyr::select(-c("1986","cellnum"))
forecast.dat.cells <- cbind(start.xy, tree.for) %>% dplyr::select(-c("1986"))
# Create an array where each row is pixel, retain x,y, and year columns, 3rd dimension is year
cols <- c("x", "y", "cover")
for.array <- array(NA, c(length(forecast.dat$x),3, 36), dimnames = list(NULL,cols,NULL))
dim(for.array)[3]
years <- 1986:2021
for(t in 1:36) {
for.array[,,t] <- forecast.dat %>% dplyr::select(c(x, y, as.character(years[t]))) %>% as.matrix()
}
# Convert forecast array into a raster stack
for.rasters <- list()
for(t in 1:36) {
for.rasters[[t]] <- df2raster(as.data.frame(for.array[,,t]))
}
forecast.stack <- raster::stack(for.rasters)
# this plot works best if you make plot window SHORT and WIDE
(mapped_pred_vs_obs <- levelplot(
subset(raster::stack(truthstack[[subras]],forecast.stack[[subras]]), c(1,2,3,4,5,6,7,8)), #reorder rasters
col.regions = colorRampPalette(brewer.pal(9,"YlGn")),
xlab = "", ylab = "predicted            observed",
names.attr = as.character(
c(1990,2000,2010,2021,1990,2000,2010,2021)),
scales = list(draw = F)))
# -------- plot Bias in cover forecast ------
# error based on latent state
#biastack <- (forecast.stack[[1:31]] - lat.stack[[1:31]]) # bias based on latent
biastack <- (forecast.stack[[1:36]] - truthstack[[1:36]]) # bias based on observed
# base plot
par(mfrow = c(1,4),mai = c(1,0.1,0.1,0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1,0.1,0.1,0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[35]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
# base plot
par(mfrow = c(1,4),mai = c(1,0.1,0.1,0.1))
plot(biastack[[5]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[15]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[25]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n", legend = F)
plot(biastack[[36]], col = rev(brewer.pal(7,"RdBu")), zlim = c(-11, 11), xaxt = "n", yaxt = "n")
